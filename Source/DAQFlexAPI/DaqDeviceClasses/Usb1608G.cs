//***************************************************************************************
//
// DAQFlex API Library
//
// Copyright (c) 2009, Measurement Computing Corporation
// All rights reserved
//
// This library is free software; you can redistribute it and/or modify it 
// under the terms of the MEASUREMENT COMPUTING SOFTWARE LICENSE AGREEMENT (DAQFlex API)
// by Measurement Computing Coporation.
// 
// You should have received a copy of the MEASUREMENT COMPUTING SOFTWARE 
// LICENSE AGREEMENT (DAQFlex API) with this library; If not you can contact
// Measurement Computing Corporation, 10 Commerce Way, Norton MA 02766 USA.
// 
//***************************************************************************************

using System;
using System.Collections.Generic;
using System.Text;

namespace MeasurementComputing.DAQFlex
{
    internal class Usb1608G : Usb1608GBase
    {
        //===========================================================================
        /// <summary>
        /// ctor
        /// </summary>
        /// <param name="deviceInfo">deviceInfo</param>
        //===========================================================================
        internal Usb1608G(DeviceInfo deviceInfo)
            : base(deviceInfo)
        {
            Ai = new Usb1608GAi(this, deviceInfo);
            Dio = new DioComponent(this, deviceInfo, 1);
            Ctr = new VirtualSSEventCounter(this, deviceInfo, 2);
            Tmr = new PulseTimer(this, deviceInfo, 1);

            // 1/10/2012: version 1.1
            m_defaultDevCapsImage = new byte[] 
                {   0x1F,0x8B,0x08,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0xED,0xBD,0x07,0x60,0x1C,0x49,
                    0x96,0x25,0x26,0x2F,0x6D,0xCA,0x7B,0x7F,0x4A,0xF5,0x4A,0xD7,0xE0,0x74,0xA1,0x08,
                    0x80,0x60,0x13,0x24,0xD8,0x90,0x40,0x10,0xEC,0xC1,0x88,0xCD,0xE6,0x92,0xEC,0x1D,
                    0x69,0x47,0x23,0x29,0xAB,0x2A,0x81,0xCA,0x65,0x56,0x65,0x5D,0x66,0x16,0x40,0xCC,
                    0xED,0x9D,0xBC,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xBA,0x3B,
                    0x9D,0x4E,0x27,0xF7,0xDF,0xFF,0x3F,0x5C,0x66,0x64,0x01,0x6C,0xF6,0xCE,0x4A,0xDA,
                    0xC9,0x9E,0x21,0x80,0xAA,0xC8,0x1F,0x3F,0x7E,0x7C,0x1F,0x3F,0x22,0xF6,0x1E,0xEC,
                    0xFD,0xEE,0xBB,0xE3,0x9D,0x9D,0xDF,0x7D,0xF7,0xD1,0xCE,0xA3,0x6F,0x3D,0xFA,0xBD,
                    0x1F,0xED,0x3D,0xDA,0x7D,0xF4,0xF0,0xD3,0x47,0xBB,0xFA,0xC1,0xCE,0xF6,0x03,0xFE,
                    0x68,0x67,0xB4,0x6B,0x3F,0x3B,0xD8,0xDE,0xBD,0x4F,0x1F,0xE1,0x0F,0x7C,0x84,0xFF,
                    0x7E,0x6F,0xF9,0xEB,0x53,0xFE,0x73,0x4F,0xFF,0x3C,0xF8,0xDD,0xF1,0xFB,0xB7,0xF4,
                    0xAF,0x4F,0xEF,0xDF,0xBF,0x77,0x9F,0x3E,0xB9,0xE7,0x75,0xC3,0x7F,0xEE,0xD2,0x07,
                    0xF8,0xF3,0xDE,0x68,0x7F,0xF4,0x60,0xF4,0x90,0x3F,0xDB,0xEB,0x7D,0xB6,0x6F,0x01,
                    0xED,0x32,0xB6,0xF7,0xF9,0x3D,0x74,0xB7,0x7F,0x9F,0xFF,0xDC,0xF3,0xFF,0xFC,0x54,
                    0x5B,0xD3,0x9F,0xC0,0xE2,0x81,0xED,0x93,0xFF,0xDC,0x7F,0x60,0xBF,0xDE,0xBD,0xF7,
                    0xF0,0x77,0xDF,0x7B,0xF4,0xD0,0x02,0xDF,0xBB,0xBF,0x43,0x0F,0x7D,0xB4,0xBB,0x6B,
                    0x3F,0xDB,0x19,0xEF,0xEC,0xEE,0xA3,0xD9,0xEE,0x4E,0xA4,0x9D,0x19,0x21,0x81,0xE5,
                    0x36,0x06,0xF6,0xCE,0xA3,0xFD,0x1D,0x1A,0x21,0x7D,0xE2,0xA0,0xEF,0xF2,0xDF,0x07,
                    0xF6,0x8D,0x07,0xBB,0xA3,0x5D,0xC2,0x77,0xEF,0xD1,0xBE,0x0C,0x0F,0x18,0xEE,0xEE,
                    0x3C,0x1C,0xED,0xEE,0x1C,0x8C,0x76,0x77,0x01,0x7E,0xCF,0xCD,0xCA,0xFD,0x7B,0xA3,
                    0xFB,0xFB,0xF4,0xD1,0x7D,0xF3,0x3E,0x61,0xC1,0x28,0xDC,0x0B,0x86,0x47,0xEF,0xEC,
                    0xDA,0xBF,0x0F,0xEE,0x8F,0x0E,0xD0,0xE7,0xDE,0x5E,0xEF,0xA3,0x7D,0x43,0x23,0x02,
                    0x03,0xA8,0x0E,0xEF,0xFB,0xBB,0x7B,0xBF,0x3B,0x4D,0xC1,0x3D,0xFD,0x80,0xA8,0xC9,
                    0x7F,0x3B,0x14,0x3F,0xDD,0x1F,0x7D,0x7A,0x7F,0xF4,0x70,0x6F,0xF4,0xF0,0x1E,0x7D,
                    0x71,0xAF,0x0B,0xFB,0xC1,0x23,0x47,0xBB,0x5D,0xFA,0x6B,0x0F,0x08,0xEF,0xC8,0x9B,
                    0x9F,0x8E,0x3E,0x7D,0x30,0xFA,0xF4,0x60,0xF4,0xE9,0x43,0xFA,0x62,0x7F,0xC7,0x7E,
                    0xF1,0x70,0x7F,0xF4,0xF0,0x3E,0xDA,0xF2,0x27,0x42,0x61,0xFC,0x1D,0x4E,0xFB,0x43,
                    0x0F,0xF2,0x1E,0xFD,0xB5,0x87,0x31,0xEC,0x6C,0x0B,0x0F,0x3E,0xC0,0xF7,0x7B,0xF6,
                    0x03,0xA2,0xFF,0xDE,0xC3,0xFD,0x87,0x9F,0x3E,0xD8,0x23,0xC0,0x0F,0x1F,0xED,0xEF,
                    0x7A,0xDF,0xA0,0xE5,0xBE,0xDF,0x94,0x5F,0x7D,0xE0,0x01,0x3B,0x78,0x80,0x26,0x41,
                    0xE7,0xBB,0xF8,0xDC,0x8D,0x8B,0xFE,0x94,0xEE,0xA5,0xFD,0x43,0x7C,0x70,0xEF,0xC0,
                    0x7E,0x70,0xFF,0x01,0xB7,0xB0,0xC3,0xF1,0x90,0x41,0xC3,0x7D,0xFB,0xC5,0xA7,0xFB,
                    0x3B,0xFC,0xF0,0xC7,0xF7,0x1D,0x41,0xB8,0x87,0x7B,0x9F,0xBA,0x0F,0xB8,0xC5,0x7D,
                    0x30,0x93,0xC8,0xC6,0xEE,0xFE,0xA7,0xC4,0x3D,0xDC,0xCD,0xA7,0x3B,0xF6,0x53,0xE2,
                    0x80,0x83,0x07,0x9F,0xEE,0xEF,0xED,0x1E,0xEC,0x3F,0xFC,0x7F,0x00,0x46,0x51,0x39,
                    0xA0,0xDD,0x03,0x00,0x00 };
        }
    }
}
