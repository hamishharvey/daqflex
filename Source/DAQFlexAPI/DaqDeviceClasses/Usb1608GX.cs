//***************************************************************************************
//
// DAQFlex API Library
//
// Copyright (c) 2009, Measurement Computing Corporation
// All rights reserved
//
// This library is free software; you can redistribute it and/or modify it 
// under the terms of the MEASUREMENT COMPUTING SOFTWARE LICENSE AGREEMENT (DAQFlex API)
// by Measurement Computing Coporation.
// 
// You should have received a copy of the MEASUREMENT COMPUTING SOFTWARE 
// LICENSE AGREEMENT (DAQFlex API) with this library; If not you can contact
// Measurement Computing Corporation, 10 Commerce Way, Norton MA 02766 USA.
// 
//***************************************************************************************

using System;
using System.Collections.Generic;
using System.Text;

namespace MeasurementComputing.DAQFlex
{
    internal class Usb1608GX : Usb1608GBase
    {
        //===========================================================================
        /// <summary>
        /// ctor
        /// </summary>
        /// <param name="deviceInfo">deviceInfo</param>
        //===========================================================================
        internal Usb1608GX(DeviceInfo deviceInfo)
            : base(deviceInfo)
        {
            Ai = new Usb1608GAi(this, deviceInfo);
            Dio = new DioComponent(this, deviceInfo, 1);
            Ctr = new VirtualSSEventCounter(this, deviceInfo, 2);
            Tmr = new PulseTimer(this, deviceInfo, 1);

            // 1/10/2012: version 1.1
            m_defaultDevCapsImage = new byte[] 
                {   0x1F,0x8B,0x08,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0xED,0xBD,0x07,0x60,0x1C,0x49,
                    0x96,0x25,0x26,0x2F,0x6D,0xCA,0x7B,0x7F,0x4A,0xF5,0x4A,0xD7,0xE0,0x74,0xA1,0x08,
                    0x80,0x60,0x13,0x24,0xD8,0x90,0x40,0x10,0xEC,0xC1,0x88,0xCD,0xE6,0x92,0xEC,0x1D,
                    0x69,0x47,0x23,0x29,0xAB,0x2A,0x81,0xCA,0x65,0x56,0x65,0x5D,0x66,0x16,0x40,0xCC,
                    0xED,0x9D,0xBC,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xBA,0x3B,
                    0x9D,0x4E,0x27,0xF7,0xDF,0xFF,0x3F,0x5C,0x66,0x64,0x01,0x6C,0xF6,0xCE,0x4A,0xDA,
                    0xC9,0x9E,0x21,0x80,0xAA,0xC8,0x1F,0x3F,0x7E,0x7C,0x1F,0x3F,0x22,0xF6,0x1E,0xDC,
                    0xFB,0xDD,0x77,0xC7,0x3B,0x3B,0xBF,0xFB,0xEE,0xA3,0x9D,0x47,0xDF,0x7A,0xF4,0x7B,
                    0x3F,0xDA,0x7B,0xB4,0xFB,0xE8,0xE1,0xA7,0x8F,0x76,0xF5,0x83,0x9D,0xED,0x07,0xFC,
                    0xD1,0xCE,0x68,0xD7,0x7E,0x76,0xB0,0xBD,0x7B,0x9F,0x3E,0xC2,0x1F,0xF8,0x08,0xFF,
                    0xFD,0xDE,0xF2,0xD7,0xA7,0xFC,0xE7,0x9E,0xFE,0x79,0xF0,0xBB,0xE3,0xF7,0x6F,0xE9,
                    0x5F,0x9F,0xDE,0xBF,0x7F,0xEF,0x3E,0x7D,0x72,0xCF,0xEB,0x86,0xFF,0xDC,0xA5,0x0F,
                    0xF0,0xE7,0xBD,0xD1,0xFE,0xE8,0xC1,0xE8,0x21,0x7F,0xB6,0xD7,0xFB,0x6C,0xDF,0x02,
                    0xDA,0x65,0x6C,0xEF,0xF3,0x7B,0xE8,0x6E,0xFF,0x3E,0xFF,0xB9,0xE7,0xFF,0xF9,0xA9,
                    0xB6,0xA6,0x3F,0x81,0xC5,0x03,0xDB,0x27,0xFF,0xB9,0xFF,0xC0,0x7E,0xBD,0x7B,0xEF,
                    0xE1,0xEF,0xBE,0xF7,0xE8,0xA1,0x05,0x7E,0x7F,0x07,0x0F,0x7D,0xB4,0xBB,0x6B,0x3F,
                    0xDB,0x19,0xEF,0xEC,0xEE,0xA3,0xD9,0xEE,0x4E,0xA4,0x9D,0x19,0x21,0x81,0xE5,0x36,
                    0x06,0xF6,0xCE,0xA3,0xFD,0x1D,0x1A,0x21,0x7D,0xE2,0xA0,0xEF,0xF2,0xDF,0x07,0xF6,
                    0x8D,0x07,0xBB,0xA3,0x5D,0xC2,0x77,0xEF,0xD1,0xBE,0x0C,0x0F,0x18,0xEE,0xEE,0x3C,
                    0x1C,0xED,0xEE,0x1C,0x8C,0x76,0x77,0x01,0x7E,0xCF,0xCD,0xCA,0xFD,0x7B,0xA3,0xFB,
                    0xFB,0xF4,0xD1,0x7D,0xF3,0xFE,0x0E,0x7D,0x8B,0x36,0xF7,0x82,0xE1,0xD1,0x3B,0xBB,
                    0xF6,0xEF,0x83,0xFB,0xA3,0x03,0xF4,0xB9,0xB7,0xD7,0xFB,0x68,0xDF,0xD0,0x88,0xC0,
                    0x00,0xAA,0xC3,0xFB,0xFE,0xEE,0xDE,0xEF,0x4E,0x53,0x70,0x4F,0x3F,0x20,0x6A,0xF2,
                    0xDF,0x0E,0xC5,0x4F,0xF7,0x47,0x9F,0xDE,0x1F,0x3D,0xDC,0x1B,0x3D,0xBC,0x47,0x5F,
                    0xDC,0xEB,0xC2,0x7E,0xF0,0xC8,0xD1,0x6E,0x97,0xFE,0xDA,0x03,0xC2,0x3B,0xF2,0xE6,
                    0xA7,0xA3,0x4F,0x1F,0x8C,0x3E,0x3D,0x18,0x7D,0xFA,0x90,0xBE,0xD8,0xDF,0xB1,0x5F,
                    0x3C,0xDC,0x1F,0x3D,0xBC,0x8F,0xB6,0xFC,0x09,0x23,0x75,0x1F,0x7F,0x87,0xD3,0xFE,
                    0xD0,0x83,0xBC,0x47,0x7F,0xED,0x61,0x0C,0x3B,0xDB,0xC2,0x83,0x0F,0xF0,0xFD,0x9E,
                    0xFD,0x80,0xE8,0xBF,0xF7,0x70,0xFF,0xE1,0xA7,0x0F,0xF6,0x08,0xF0,0xC3,0x47,0xFB,
                    0xBB,0xDE,0x37,0x68,0xB9,0xEF,0x37,0xE5,0x57,0x1F,0x78,0xC0,0x0E,0x1E,0xA0,0x49,
                    0xD0,0xF9,0x2E,0x3E,0x77,0xE3,0xA2,0x3F,0xA5,0x7B,0x69,0xFF,0x10,0x1F,0xDC,0x3B,
                    0xB0,0x1F,0xDC,0x7F,0xC0,0x2D,0xEC,0x70,0x3C,0x64,0xD0,0x70,0xDF,0x7E,0xF1,0xE9,
                    0xFE,0x8E,0xF0,0x12,0x3E,0xBE,0xEF,0x08,0xC2,0x3D,0xDC,0xFB,0xD4,0x7D,0xC0,0x2D,
                    0xEE,0x83,0x99,0x44,0x36,0x76,0xF7,0x3F,0x25,0xEE,0xE1,0x6E,0x3E,0xDD,0xB1,0x9F,
                    0x12,0x07,0xDC,0xBB,0x4F,0xB4,0xBB,0xBF,0x7F,0x6F,0x7F,0xEF,0xFF,0x01,0x57,0xF0,
                    0x33,0x89,0xDE,0x03,0x00,0x00 };
        }
    }
}
