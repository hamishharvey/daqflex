//***************************************************************************************
//
// DAQFlex API Library
//
// Copyright (c) 2009, Measurement Computing Corporation
// All rights reserved
//
// This library is free software; you can redistribute it and/or modify it 
// under the terms of the MEASUREMENT COMPUTING SOFTWARE LICENSE AGREEMENT (DAQFlex API)
// by Measurement Computing Coporation.
// 
// You should have received a copy of the MEASUREMENT COMPUTING SOFTWARE 
// LICENSE AGREEMENT (DAQFlex API) with this library; If not you can contact
// Measurement Computing Corporation, 10 Commerce Way, Norton MA 02766 USA.
// 
//***************************************************************************************

using System;
using System.Collections.Generic;
using System.Text;

namespace MeasurementComputing.DAQFlex
{
    //===========================================================================
    /// <summary>
    /// Sub-class of DaqDevice that provides methods specific to the USB-7204
    /// </summary>
    /// <param name="deviceInfo">A device info object</param>
    //===========================================================================
    internal class Usb1608GX2Ao : Usb1608GBase
    {
        //===========================================================================
        /// <summary>
        /// ctor
        /// </summary>
        /// <param name="deviceInfo">deviceInfo</param>
        //===========================================================================
        internal Usb1608GX2Ao(DeviceInfo deviceInfo)
            : base(deviceInfo)
        {
            Ai = new Usb1608GAi(this, deviceInfo);
            Ao = new Usb1608GXAo(this, deviceInfo);
            Dio = new DioComponent(this, deviceInfo, 1);
            Ctr = new VirtualSSEventCounter(this, deviceInfo, 2);
            Tmr = new PulseTimer(this, deviceInfo, 1);

            // 1/10/2012: version 1.1
            m_defaultDevCapsImage = new byte[] 
                {   0x1F,0x8B,0x08,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0xED,0xBD,0x07,0x60,0x1C,0x49,
                    0x96,0x25,0x26,0x2F,0x6D,0xCA,0x7B,0x7F,0x4A,0xF5,0x4A,0xD7,0xE0,0x74,0xA1,0x08,
                    0x80,0x60,0x13,0x24,0xD8,0x90,0x40,0x10,0xEC,0xC1,0x88,0xCD,0xE6,0x92,0xEC,0x1D,
                    0x69,0x47,0x23,0x29,0xAB,0x2A,0x81,0xCA,0x65,0x56,0x65,0x5D,0x66,0x16,0x40,0xCC,
                    0xED,0x9D,0xBC,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xBA,0x3B,
                    0x9D,0x4E,0x27,0xF7,0xDF,0xFF,0x3F,0x5C,0x66,0x64,0x01,0x6C,0xF6,0xCE,0x4A,0xDA,
                    0xC9,0x9E,0x21,0x80,0xAA,0xC8,0x1F,0x3F,0x7E,0x7C,0x1F,0x3F,0x22,0xF6,0x1E,0xEC,
                    0xFF,0xEE,0xBB,0xE3,0x9D,0x9D,0xDF,0x7D,0xF7,0xD1,0xCE,0xA3,0x6F,0x3D,0xFA,0xBD,
                    0x1F,0xED,0x3D,0xDA,0x7D,0xF4,0xF0,0xD3,0x47,0xBB,0xFA,0xC1,0xCE,0xF6,0x03,0xFE,
                    0x68,0x67,0xB4,0x6B,0x3F,0x3B,0xD8,0xDE,0xBD,0x4F,0x1F,0xE1,0x0F,0x7C,0x84,0xFF,
                    0x7E,0x6F,0xF9,0xEB,0x53,0xFE,0x73,0x4F,0xFF,0x3C,0xF8,0xDD,0xF1,0xFB,0xB7,0xF4,
                    0xAF,0x4F,0xEF,0xDF,0xBF,0x77,0x9F,0x3E,0xB9,0xE7,0x75,0xC3,0x7F,0xEE,0xD2,0x07,
                    0xF8,0xF3,0xDE,0x68,0x7F,0xF4,0x60,0xF4,0x90,0x3F,0xDB,0xEB,0x7D,0xB6,0x6F,0x01,
                    0xED,0x32,0xB6,0xF7,0xF9,0x3D,0x74,0xB7,0x7F,0x9F,0xFF,0xDC,0xF3,0xFF,0xFC,0x54,
                    0x5B,0xD3,0x9F,0xC0,0xE2,0x81,0xED,0x93,0xFF,0xDC,0x7F,0x60,0xBF,0xDE,0xBD,0xF7,
                    0xF0,0x77,0xDF,0x7B,0xF4,0xD0,0x02,0xBF,0xBF,0x83,0x87,0x3E,0xDA,0xDD,0xB5,0x9F,
                    0xED,0x8C,0x77,0x76,0xF7,0xD1,0x6C,0x77,0x27,0xD2,0xCE,0x8C,0x90,0xC0,0x72,0x1B,
                    0x03,0x7B,0xE7,0xD1,0xFE,0x0E,0x8D,0x90,0x3E,0x71,0xD0,0x77,0xF9,0xEF,0x03,0xFB,
                    0xC6,0x83,0xDD,0xD1,0x2E,0xE1,0xBB,0xF7,0x68,0x5F,0x86,0x07,0x0C,0x77,0x77,0x1E,
                    0x8E,0x76,0x77,0x0E,0x46,0xBB,0xBB,0x00,0xBF,0xE7,0x66,0xE5,0xFE,0xBD,0xD1,0xFD,
                    0x7D,0xFA,0xE8,0xBE,0x79,0x9F,0x49,0x81,0x46,0xF7,0x82,0xF1,0xD1,0x4B,0xBB,0xF6,
                    0xEF,0x83,0xFB,0xA3,0x03,0x74,0xBA,0xB7,0xD7,0xFB,0x68,0xDF,0x10,0x69,0xE7,0xD1,
                    0x1E,0xC0,0x3A,0xC4,0xEF,0xEF,0xEE,0xFD,0xEE,0x34,0x07,0xF7,0xF4,0x03,0x22,0x27,
                    0xFF,0xED,0x70,0xFC,0x74,0x7F,0xF4,0xE9,0xFD,0xD1,0xC3,0xBD,0xD1,0xC3,0x7B,0xF4,
                    0xC5,0xBD,0x2E,0xEC,0xFD,0x47,0x8E,0x78,0x7B,0xF4,0x57,0x97,0x09,0xF6,0x99,0x09,
                    0x64,0xBA,0xEE,0xD1,0x5F,0xE1,0xDC,0x52,0xFB,0xFB,0xF6,0xEB,0x7D,0xB4,0x0E,0x66,
                    0x73,0x3F,0x9C,0xCD,0xFD,0xEE,0x6C,0xDE,0xEF,0xCF,0xE6,0xFD,0xC8,0x6C,0xDE,0x8F,
                    0xCC,0xE6,0xFD,0xCE,0x6C,0xDE,0xF7,0x67,0x73,0x6F,0x87,0x7A,0xBB,0x1F,0x52,0xED,
                    0x7E,0x9F,0xD4,0xF7,0xBB,0x84,0x7C,0xE0,0x11,0x63,0x97,0xFE,0xDA,0xC3,0xF4,0xED,
                    0x08,0x19,0x3F,0x1D,0x7D,0xFA,0x60,0xF4,0xE9,0xC1,0xE8,0xD3,0x87,0xF4,0xC5,0xFE,
                    0x8E,0xFD,0xE2,0xE1,0xFE,0xE8,0xE1,0x7D,0xB4,0xE5,0x4F,0xB8,0xAF,0xFB,0xF8,0x3B,
                    0x24,0xD4,0xC3,0x80,0xCC,0x0F,0x1F,0xED,0x01,0xB5,0x9D,0x6D,0x91,0xC8,0x07,0xF8,
                    0x7E,0xCF,0x7E,0x40,0xDC,0xB8,0xF7,0x70,0xFF,0xE1,0xA7,0x0F,0xF6,0x08,0xF0,0xC3,
                    0x47,0xFB,0xBB,0xDE,0x37,0x68,0xB9,0xEF,0x37,0xE5,0x57,0x1F,0x78,0xC0,0x0E,0x1E,
                    0xA0,0x49,0xD0,0xF9,0x2E,0x3E,0x77,0xE3,0xA2,0x3F,0xA5,0x7B,0x69,0xFF,0x10,0x1F,
                    0xDC,0x3B,0xB0,0x1F,0xDC,0x7F,0xC0,0x2D,0xEC,0x70,0x3C,0x64,0xD0,0x70,0xDF,0x7E,
                    0xF1,0xE9,0xFE,0x8E,0xCC,0x05,0x3E,0xBE,0xCF,0x1F,0x33,0x41,0xB8,0x87,0x7B,0x9F,
                    0xBA,0x0F,0x76,0x7E,0xF7,0x4F,0x3F,0xFD,0xF4,0xE1,0x83,0xBD,0x9D,0x83,0x83,0xFF,
                    0x07,0x86,0x37,0xBA,0xE1,0xC4,0x04,0x00,0x00 };
        }
    }
}
