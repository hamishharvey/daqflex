//***************************************************************************************
//
// DAQFlex API Library
//
// Copyright (c) 2009, Measurement Computing Corporation
// All rights reserved
//
// This library is free software; you can redistribute it and/or modify it 
// under the terms of the MEASUREMENT COMPUTING SOFTWARE LICENSE AGREEMENT (DAQFlex API)
// by Measurement Computing Coporation.
// 
// You should have received a copy of the MEASUREMENT COMPUTING SOFTWARE 
// LICENSE AGREEMENT (DAQFlex API) with this library; If not you can contact
// Measurement Computing Corporation, 10 Commerce Way, Norton MA 02766 USA.
// 
//***************************************************************************************

using System;
using System.Collections.Generic;
using System.Text;

namespace MeasurementComputing.DAQFlex
{
    class Usb2408 : Usb2408x
    {
         //===========================================================================
        /// <summary>
        /// ctor
        /// </summary>
        /// <param name="deviceInfo">deviceInfo</param>
        //===========================================================================
        internal Usb2408(DeviceInfo deviceInfo)
            : base(deviceInfo)
        {
            Ai = new Usb2408xAi(this, deviceInfo);
            Dio = new DioComponent(this, deviceInfo, 1);
            Ctr = new VirtualSSEventCounter(this, deviceInfo, 2);

            m_memAddrCmd = 0x00;
            m_memLockAddr = 0x00;
            m_memUnlockCode = 0xAA55;
            m_memLockCode = 0xFFFF;

            // 1/10/2012: version 1.1
            m_defaultDevCapsImage = new byte[] 
                {   0x1F,0x8B,0x08,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0xED,0xBD,0x07,0x60,0x1C,0x49,
                    0x96,0x25,0x26,0x2F,0x6D,0xCA,0x7B,0x7F,0x4A,0xF5,0x4A,0xD7,0xE0,0x74,0xA1,0x08,
                    0x80,0x60,0x13,0x24,0xD8,0x90,0x40,0x10,0xEC,0xC1,0x88,0xCD,0xE6,0x92,0xEC,0x1D,
                    0x69,0x47,0x23,0x29,0xAB,0x2A,0x81,0xCA,0x65,0x56,0x65,0x5D,0x66,0x16,0x40,0xCC,
                    0xED,0x9D,0xBC,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xDE,0x7B,0xEF,0xBD,0xF7,0xBA,0x3B,
                    0x9D,0x4E,0x27,0xF7,0xDF,0xFF,0x3F,0x5C,0x66,0x64,0x01,0x6C,0xF6,0xCE,0x4A,0xDA,
                    0xC9,0x9E,0x21,0x80,0xAA,0xC8,0x1F,0x3F,0x7E,0x7C,0x1F,0x3F,0x22,0xF6,0xEE,0xDF,
                    0xFB,0xDD,0x77,0xC7,0x3B,0x3B,0xBF,0xFB,0xEE,0xA3,0x9D,0x47,0xDF,0x7A,0xF4,0x7B,
                    0x3F,0xDA,0x7B,0xB4,0xFB,0xE8,0xE1,0xA7,0x8F,0x76,0xF5,0x83,0x9D,0xED,0x07,0xFC,
                    0xD1,0xCE,0x68,0x77,0xB4,0xBB,0xBB,0x47,0xFF,0xBF,0x67,0xBF,0x3B,0xD8,0xDE,0xBD,
                    0x4F,0x5F,0xE1,0x0F,0x7C,0xB4,0xCB,0xEF,0xF3,0x5F,0x9F,0xD2,0x9F,0x7B,0xDE,0x9F,
                    0x0F,0x1E,0x3C,0xD8,0xDB,0xBD,0x4F,0x1F,0xEE,0x3F,0xD0,0x4F,0xE9,0xBF,0xDD,0x07,
                    0xF4,0xC1,0x3D,0xAF,0x53,0xFE,0x13,0x50,0xF0,0xE7,0xBD,0xD1,0xFE,0xE8,0xD3,0xD1,
                    0xC1,0x68,0x97,0x7A,0x7E,0x38,0xDA,0xDB,0x19,0xED,0xED,0xF2,0xF7,0x7B,0x37,0x7C,
                    0x7F,0x8F,0x51,0x46,0x07,0xFA,0xC1,0x7E,0xF8,0xC1,0x7D,0x8B,0x00,0x77,0x88,0x01,
                    0xEC,0x98,0x71,0xEC,0xDF,0xE7,0x4F,0xF6,0xEC,0x1B,0xFA,0x81,0x83,0xB9,0xFF,0x80,
                    0x3F,0x70,0x30,0xF9,0x83,0xBD,0x87,0x21,0x50,0xFA,0xDB,0xBD,0xF2,0x40,0x3F,0x71,
                    0xEF,0xF0,0x27,0xF7,0x7C,0x72,0xCB,0xDF,0xF2,0x0E,0x3E,0x79,0xF0,0x60,0xF4,0xE0,
                    0x60,0xF4,0xE0,0xE1,0xE8,0x60,0x67,0x74,0xB0,0x3B,0x3A,0xD8,0x1B,0x1D,0xDC,0x1B,
                    0x1D,0xEC,0x4B,0xB3,0xFD,0x5B,0x34,0xDB,0xBF,0x6F,0xA1,0xEF,0x1F,0xE0,0x6F,0xD0,
                    0x59,0x08,0xF7,0xF0,0xC1,0xE8,0xE1,0xC1,0xE8,0xE1,0x43,0xA2,0x1C,0x91,0x6E,0x87,
                    0xA6,0x75,0x87,0xA6,0x75,0xE7,0x1E,0xFD,0x7F,0x9F,0xFE,0x7F,0x9F,0xFE,0xFF,0x29,
                    0xFD,0x1F,0xE3,0xDA,0xB7,0x53,0xC8,0x84,0xF8,0xD4,0x8E,0x92,0x61,0x3E,0xF0,0xBB,
                    0xD8,0x7B,0x64,0x68,0x40,0xF3,0x4D,0x10,0xC7,0x0F,0xF7,0xE9,0xB3,0x5D,0xC7,0x13,
                    0x7B,0xE3,0xFB,0xF8,0x60,0x27,0xD6,0xCA,0xB0,0x0A,0x91,0x76,0x17,0x7F,0x1B,0x26,
                    0xA1,0xB7,0x76,0x18,0xF6,0xAE,0x03,0xFE,0x29,0xBF,0x71,0x60,0xDF,0x78,0x40,0x03,
                    0xD8,0x07,0xE8,0xFD,0x7D,0x8B,0xCF,0xEE,0x0E,0x8D,0x0E,0x8C,0xB1,0x43,0xFC,0xB1,
                    0x0B,0x90,0x7B,0x8E,0xDA,0xF7,0xEF,0x8D,0xEE,0x03,0xC6,0x7D,0x03,0x83,0x7A,0xB9,
                    0xBF,0x03,0x00,0x66,0x7C,0x34,0x5C,0x7C,0xEF,0xB0,0xA0,0x3E,0x31,0x73,0x16,0x73,
                    0xFA,0x6B,0x0F,0x6F,0xEF,0x30,0xFB,0x7C,0xFA,0xE9,0xE8,0xD3,0x07,0xA3,0x4F,0x0F,
                    0x46,0x9F,0x3E,0xA4,0x2F,0xF6,0x59,0x6A,0x84,0xD2,0xFB,0xA3,0x87,0xF7,0xD1,0x96,
                    0x3F,0x91,0x8E,0xF0,0xB7,0x23,0xEB,0x1E,0x09,0xDE,0x43,0x0F,0xF2,0x1E,0xFD,0xB5,
                    0x07,0x34,0x88,0x25,0x65,0x74,0xF8,0x7E,0xCF,0x7E,0x40,0x98,0xED,0x3D,0xDC,0x7F,
                    0xF8,0xE9,0x83,0x3D,0x02,0x4C,0x2C,0xB5,0xEB,0x7D,0x83,0x96,0xFB,0x7E,0x53,0x7E,
                    0xF5,0x81,0x07,0xEC,0xE0,0x01,0x9A,0x04,0x9D,0xEF,0xED,0xED,0xEE,0x1E,0x1C,0xDC,
                    0x3F,0xF8,0x74,0xEF,0xFF,0x01,0xD0,0x25,0x20,0x57,0x09,0x04,0x00,0x00};
        }
   }
}
